<!DOCTYPE html>
<html ng-app="myApp">
<head>
    <!-- Meta -->
    <meta charset="UTF-8" />
    
    <!-- FONT AWESOME -->
    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css" rel="stylesheet">
    <!-- ANGULAR -->
    <script src="//cdnjs.cloudflare.com/ajax/libs/angular.js/1.3.14/angular.min.js"></script>

    <!-- ANGULAR TOOLBAR CSS -->
    <link href="css/angular-toolbar.css" rel="stylesheet">


</head>

<body>
    
    <div class="container" ng-controller="MyController">

    	<div class="row">
	    <p>Inspired from <a href="https://paulkinzett.github.io/toolbar/">paulkinzett.github.io/toolbar/</a>.</p>
	    <p>Codepen <a href="http://codepen.io/hugsbrugs/pen/xGMjZx?editors=101">codepen</a></p>
	</div>

        <div class="row" style="margin-top:100px;">
            <div class="col-sm-2 col-sm-offset-6" style="margin-left:100px;">
          
                <toolbar icon="fa fa-times" position="right" style="danger" animation="flip" event="click" adjustment="10" tools="tools">

                    <tool icon="fa fa-plus" style="primary" event-handler="myFirstFunction('coucou')"></tool>
                    <tool icon="fa fa-times" style="danger" event-handler="mySecondFunction('tata')"></tool>
                    <tool icon="fa fa-times" style="danger" event-handler="mySecondFunction('tata')"></tool>
                    <!-- <tool icon="fa fa-times" style="danger" click="alert('tata')"></tool> -->
                </toolbar>
          
            </div>
        </div>

        <!-- <tool icon="fa fa-times" style="danger" data-ng-click="myFirstFunction('tata')"></tool> -->

    </div>
    

<script type="text/javascript">

angular.module('myApp.ToolbarDirectives', [])

    /**
     *
     */
    .directive('toolbar', ['$compile', '$document', function ($compile, $document) {
        return {
            restrict: 'E',
            // scope: {
            //     tools : '='
            // },
            scope : true,
            link: function (scope, element, attrs)
            {
                //console.log(JSON.stringify(element));
                //console.log(element.html());
                var original_element = angular.copy(element.html());

                // event
                var is_clicked = false;
                if(attrs.event==='mouseover'){
                    element.bind('mouseover', function (){
                        scope.showToolbar();
                    });
                    element.bind('mouseout', function (){
                        scope.hideToolbar();
                    });
                } else {  //if(attrs.event==='click')
                    element.bind('click', function (){
                        if(is_clicked === false)
                        {
                            

                            // $document.on( "click", function( event ){
                            //     console.log('catch click');
                            //     if(is_clicked === true)
                            //     {
                            //         scope.hideToolbar();
                            //         is_clicked = false;
                            //     }
                            // });
                    
                            scope.showToolbar();
                            is_clicked = true;
                        }
                        else
                        {
                            scope.hideToolbar();
                            is_clicked = false;
                        }
                    });
                    

                }
              
                // style
                var styles = ['default', 'primary', 'info', 'danger', 'warning'];
                var html_syle = '';
                if( styles.indexOf(attrs.style)>-1 ){
                    html_syle = 'btn-toolbar-' + attrs.style;
                } else {
                    html_syle = 'btn-toolbar-default';
                }
                
                // create toolbutton
                var html = '';
                html += '<div class="btn-toolbar '+html_syle+'">';
                    html += '<i class="'+attrs.icon+'"></i>';
                html += '</div>';
                
                // var toolbutton = angular.element(html);
                // element.html($compile(toolbutton)(scope));
                element.html(html);
                
                // display toolbar
                scope.showToolbar = function()
                {
                    //toolbox.css('display', 'block');
                    toolbox.css('opacity', 1);
                };

                scope.hideToolbar = function()
                {
                    //toolbox.css('display', 'none');
                    toolbox.css('opacity', 0);
                };






                // toolbox position
                scope.getElementOffset = function (toolbox)
                {
                    var de = document.documentElement;
                    var box = toolbox[0].getBoundingClientRect();
                    var top = box.top + window.pageYOffset - de.clientTop;
                    var left = box.left + window.pageXOffset - de.clientLeft;
                    return { top: top, left: left };
                };
                //console.log('offset : ' + JSON.stringify(scope.getElementOffset(element)));

                scope.getCoordinates = function( toolbox ) {
                    var position = attrs.position;
                    var adjustment = parseInt(attrs.adjustment);

                    var coordinates = scope.getElementOffset(element);
                    
                    var toolbar_width = 40;//toolbox[0].offsetWidth;
                    var toolbar_height = 40;//toolbox[0].offsetHeight;
                    var toolbar_outer_width = toolbox[0].clientWidth;
                    var toolbar_outer_height = toolbox[0].clientHeight;

                    console.log('coordinates.top : ' + coordinates.top);
                    console.log('toolbar_width : ' + toolbar_width);
                    console.log('toolbar_outer_width : ' + toolbar_outer_width);
                    console.log('toolbar_height : ' + toolbar_height);
                    console.log('toolbar_outer_height : ' + toolbar_outer_height);
                    console.log('adjustment : ' + adjustment);                    

                    // if (attrs.adjustment && attrs.adjustment[attrs.position]) {
                    //     adjustment = self.options.adjustment[attrs.position] + adjustment;
                    // }

                    switch(position) {
                        case 'top':
                            return {
                                left: coordinates.left + (toolbar_width/2) - (toolbar_outer_width/2),
                                top: coordinates.top - (toolbar_height/2) - (toolbar_outer_height/2) - adjustment,
                                right: 'auto'
                            };
                        case 'left':
                            return {
                                left: coordinates.left - (toolbar_width) - adjustment,
                                top: coordinates.top + (toolbar_height/2) - (toolbar_outer_height/2),
                                right: 'auto'
                            };
                        case 'right':
                            return {
                                left: coordinates.left + (toolbar_width/2) + (toolbar_outer_width/2) + adjustment,
                                top: coordinates.top + (toolbar_height/2) - (toolbar_outer_height/2),
                                right: 'auto'
                            };
                        case 'bottom':
                            return {
                                left: coordinates.left + (toolbar_width/2) - (toolbar_outer_width/2),
                                top: coordinates.top + (toolbar_height/2) + (toolbar_outer_height/2) + adjustment,
                                right: 'auto'
                            };
                    }
                };

                // create toolbox
                var html_toolbox = '';
                html_toolbox += '<div id="coucou" class="tool-container tool-'+attrs.position+' toolbar-info-o animate-standard" style="position:absolute;opacity:0;left:0px;top:0px;right:auto;">';
                    
                    // tool items
                    html_toolbox += '<div class="tool-items">';

                        //html_toolbox += original_element;

                        //console.log(original_element);
                        //html_toolbox += '<tool icon="fa fa-plus" style="primary" ng-click="myFirstFunction(\'coucou\')"></tool>';

                        angular.forEach(scope.tools, function(tool){
                            console.log(tool);
                            //html_toolbox += '<tool icon="'+tool.icon+'" style="'+tool.style+'" ng-click="'+tool.click+'"></tool>'
                            html_toolbox += '<a href="#" class="tool-item btn-toolbar-'+tool.style+'" ng-click="'+tool.click+'"><i class="'+tool.icon+'"></i></a>';
                        });

                    html_toolbox += '</div>';

                    // toolbox arrow
                    if(attrs.position==='top' || attrs.position==='bottom' )
                        html_toolbox += '<div class="arrow" style="left: 50%; right: 50%;"></div>';
                    else
                        html_toolbox += '<div class="arrow"></div>';
                
                html_toolbox += '</div>';

                var toolbox = angular.element(html_toolbox);

                var body = angular.element(document).find('body').eq(0);
                body.append($compile(toolbox)(scope));
                //body.append(toolbox);

                // set good coordinates
                var coord = scope.getCoordinates(toolbox);
                console.log('coordinates : ' + JSON.stringify(coord));
                toolbox.css('left', coord.left + 'px');
                toolbox.css('top', coord.top + 'px');
                toolbox.css('right', 'auto');

            }
        }
    }])

    /**
     *
     */
    .directive("tool", function($compile){
        return{
            transclude: true,
            replace : true,
            restrict : 'E',
            scope : {
                icon : '@',
                style : '@',
                click : '&'
            },
            template : '<a href="#" class="tool-item btn-toolbar-{{style}}" ng-click="click()"><i class="{{icon}}"></i></a>',
            //ng-click="eventHandler()"

            // link: function(scope, element, attrs) {
            //     $compile(element.contents())(scope.$new());
            // }

            // link : function(scope, element, attrs){

            //     var styles = ['default', 'primary', 'info', 'danger', 'warning'];
            //     scope.html_style = '';
            //     if( styles.indexOf(attrs.style)>-1 ){
            //         html_style = 'btn-toolbar-' + attrs.style;
            //     } else {
            //         html_tsyle = 'btn-toolbar-default';
            //     }

            //     scope.style = html_tsyle;
            //     scope.icon = attrs.icon;

            //     // var template = '';
            //     // template += '<a href="#" class="tool-item '+html_syle+'">';
            //     //     template += '<i class="'+attrs.icon+'"></i>';
            //     // template += '</a>';

            //     // var linkFn = $compile(template);
            //     // var content = linkFn(scope);
            //     // element.append(content);
            // }
        }
    })

    /**
     *
     */
    .controller('MyController', ['$scope', function($scope) {

        $scope.tools = [
            {icon : "fa fa-plus", style : "primary", click : "myFirstFunction('coucou')"},
            {icon : "fa fa-times", style : "danger", click : "mySecondFunction('tata')"},
            {icon : "fa fa-times", style : "danger", click : "mySecondFunction('tata')"},
        ];

        $scope.doSomething = function() {
             alert('doSomething');   
        };
        
        $scope.myFirstFunction = function(msg) {
             alert(msg + '!!! first function call!');   
        };
        
        $scope.mySecondFunction = function(msg) {
             alert(msg + '!!! second function call!');   
        };

    }])


angular.module('myApp.perso', [
    'myApp.ToolbarDirectives',
]);


var myApp = angular.module('myApp', [
    'myApp.perso'
]);
</script>

</body>
</html>
